# Generated by Django 5.1.7 on 2025-04-15 17:29

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='RTOM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('area_type', models.CharField(choices=[('METRO', 'Metro'), ('REGION', 'Region')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('SPECIFY_DESIGN', 'Specify Design Details'), ('APPROVE_PE', 'Approve PE'), ('SURVEY_FIBER', 'Survey Fiber Route'), ('ASSIGN_WORK', 'Assign Work'), ('DRAW_FIBER', 'Draw Fiber'), ('SPLICE_TERMINATE', 'Splice & Terminate'), ('UPLOAD_FIBER_OSS', 'Upload Fiber in OSS'), ('CONDUCT_FIBER_PAT', 'Conduct Fiber PAT'), ('UPLOAD_DRAWING', 'Upload Drawing'), ('UPDATE_MASTER_DWG', 'Update Master DWG'), ('CLOSE_EVENT', 'Close Event')], max_length=50)),
                ('description', models.TextField()),
                ('assigned_workgroup', models.CharField(choices=[('NET-PLAN-TX', 'NET-PLAN-TX'), ('LEA-MNG-OPMC', 'LEA-MNG-OPMC'), ('NET-PLAN-ACC', 'NET-PLAN-ACC'), ('NET-PROJ-ACC-CABLE', 'NET-PROJ-ACC-CABLE'), ('XXX-MNG-OPMC', 'XXX-MNG-OPMC'), ('XXX-ENG-NW', 'XXX-ENG-NW'), ('NET-PLAN-DRAWING', 'NET-PLAN-DRAWING'), ('XXX-RTOM', 'XXX-RTOM')], max_length=50)),
                ('area_condition', models.CharField(choices=[('METRO', 'Metro'), ('REGION', 'Region')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('status', models.CharField(default='PENDING', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rtom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.rtom')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('employee_number', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('workgroup', models.CharField(choices=[('NET-PLAN-TX', 'NET-PLAN-TX'), ('LEA-MNG-OPMC', 'LEA-MNG-OPMC'), ('NET-PLAN-ACC', 'NET-PLAN-ACC'), ('NET-PROJ-ACC-CABLE', 'NET-PROJ-ACC-CABLE'), ('XXX-MNG-OPMC', 'XXX-MNG-OPMC'), ('XXX-ENG-NW', 'XXX-ENG-NW'), ('NET-PLAN-DRAWING', 'NET-PLAN-DRAWING'), ('XXX-RTOM', 'XXX-RTOM')], max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
                ('rtom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.rtom')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TaskAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='PENDING', max_length=50)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.project')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.task')),
            ],
        ),
    ]
